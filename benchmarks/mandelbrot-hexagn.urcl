BITS == 32
MINHEAP 4096
MINSTACK 1024
MOV R1 SP


CAL ._Hx4maini8
MOV SP R1
HLT

._Hx8setpixelvi16i16i32
PSH R1
MOV R1 SP

LLOD R2 R1 2 
OUT %X R2 
LLOD R2 R1 3 
OUT %Y R2 
LLOD R2 R1 4 
OUT %COLOR R2 
MOV SP R1
POP R1
RET

._Hx8getpixeli32i32i32
PSH R1
MOV R1 SP

LLOD R2 R1 2 
OUT %X R2 
LLOD R2 R1 3 
OUT %Y R2 
IN R2 %COLOR 
MOV SP R1
POP R1
RET

._Hx4maini8
PSH R1
MOV R1 SP

AND R2 0 0xffffffff
PSH R2

AND R2 150 0xffffffff
PSH R2

AND R2 0 0xffffffff
PSH R2

AND R2 0 0xffffffff
PSH R2

AND R2 0 0xffffffff
PSH R2

AND R2 0 0xffffffff
PSH R2

AND R2 0 0xffffffff
PSH R2

AND R2 0 0xffffffff
PSH R2

AND R2 0 0xffffffff
PSH R2

AND R2 0 0xffffffff
PSH R2

AND R2 671088640 0xffffffff
PSH R2

AND R2 500 0xffffffff
PSH R2

AND R2 2097152 0xffffffff
PSH R2

AND R2 1310720 0xffffffff
PSH R2

//those are inverted x and y coordinates of top left pixel

LLOD R3 R1 -13
SUB R2 4294967295 R3
LSTR R1 -13 R2

LLOD R3 R1 -14
SUB R2 4294967295 R3
LSTR R1 -14 R2

LLOD R3 R1 -11
SDIV R2 R3 256
LSTR R1 -11 R2

//this is zoom, 256 = 1x

LLOD R3 R1 -11
LLOD R4 R1 -12
SDIV R2 R3 R4
LSTR R1 -11 R2

 OUT %BUFFER 1

.while1
LLOD R2 R1 -8
LLOD R3 R1 -12
BGE .endwhile1 R2 R3
LLOD R3 R1 -14
LLOD R5 R1 -11
LLOD R6 R1 -8
MLT R4 R5 R6
ADD R2 R3 R4
LSTR R1 -6 R2

LSTR R1 -7 0

.while2
LLOD R2 R1 -7
LLOD R3 R1 -12
BGE .endwhile2 R2 R3
LLOD R3 R1 -13
LLOD R5 R1 -11
LLOD R6 R1 -7
MLT R4 R5 R6
ADD R2 R3 R4
LSTR R1 -5 R2

LLOD R2 R1 -5
LSTR R1 -3 R2

LLOD R2 R1 -6
LSTR R1 -4 R2

LSTR R1 -1 0

AND R2 0 0xffffffff
PSH R2

AND R2 0 0xffffffff
PSH R2

AND R2 247 0xffffffff
PSH R2

.while3
LLOD R2 R1 -1
LLOD R3 R1 -2
BGE .endwhile3 R2 R3
LLOD R2 R1 -17
IMM R3 0
BNE .if1 R2 R3
JMP .endif1
.if1
LLOD R3 R1 -3
SDIV R2 R3 1024
LSTR R1 -3 R2

LLOD R3 R1 -4
SDIV R2 R3 1024
LSTR R1 -4 R2

LLOD R3 R1 -3
LLOD R4 R1 -3
MLT R2 R3 R4
LSTR R1 -9 R2

LLOD R3 R1 -4
LLOD R4 R1 -4
MLT R2 R3 R4
LSTR R1 -10 R2

LLOD R3 R1 -9
LLOD R4 R1 -10
SUB R2 R3 R4
LSTR R1 -9 R2

LLOD R4 R1 -3
LLOD R5 R1 -4
MLT R3 R4 R5
MLT R2 2 R3
LSTR R1 -10 R2

LLOD R3 R1 -9
LLOD R4 R1 -5
ADD R2 R3 R4
LSTR R1 -3 R2

LLOD R3 R1 -10
LLOD R4 R1 -6
ADD R2 R3 R4
LSTR R1 -4 R2

LLOD R2 R1 -3
IMM R3 2147483648
BRG .if2 R2 R3
JMP .endif2
.if2
LLOD R3 R1 -3
SUB R2 0 R3
LSTR R1 -16 R2

ADD SP SP 0
.endif2
LLOD R2 R1 -4
IMM R3 2147483648
BRG .if3 R2 R3
JMP .endif3
.if3
LLOD R3 R1 -4
SUB R2 0 R3
LSTR R1 -15 R2

ADD SP SP 0
.endif3
LLOD R2 R1 -15
LLOD R3 R1 -16
BRG .if4 R2 R3
JMP .endif4
.if4
LLOD R2 R1 -15
LSTR R1 -16 R2

ADD SP SP 0
.endif4
LLOD R2 R1 -16
IMM R3 2097152
BRG .if5 R2 R3
JMP .endif5
.if5
LSTR R1 -17 0

ADD SP SP 0
.endif5
ADD SP SP 0
.endif1
LLOD R3 R1 -1
ADD R2 R3 1
LSTR R1 -1 R2

ADD SP SP 0
JMP .while3
.endwhile3
LLOD R2 R1 -17
IMM R3 0
BNE .if6 R2 R3
JMP .endif6
.if6
LLOD R3 R1 -3
SDIV R2 R3 1024
LSTR R1 -3 R2

LLOD R3 R1 -4
SDIV R2 R3 1024
LSTR R1 -4 R2

LLOD R3 R1 -3
LLOD R4 R1 -3
MLT R2 R3 R4
LSTR R1 -9 R2

LLOD R3 R1 -9
LLOD R5 R1 -4
LLOD R6 R1 -4
MLT R4 R5 R6
ADD R2 R3 R4
LSTR R1 -10 R2

LLOD R2 R1 -10
IMM R3 4194304
BRL .if7 R2 R3
JMP .endif7
.if7
LLOD R2 R1 -17
PSH R2
LLOD R2 R1 -8
PSH R2
LLOD R2 R1 -7
PSH R2
CAL ._Hx8setpixelvi16i16i32
ADD SP SP 3

ADD SP SP 0
.endif7
ADD SP SP 0
.endif6
LLOD R3 R1 -7
ADD R2 R3 1
LSTR R1 -7 R2

ADD SP SP 3
JMP .while2
.endwhile2
 OUT %BUFFER 2

LLOD R3 R1 -8
ADD R2 R3 1
LSTR R1 -8 R2

ADD SP SP 0
JMP .while1
.endwhile1
ADD SP SP 14
MOV SP R1
POP R1
RET

